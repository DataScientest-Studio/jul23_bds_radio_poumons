import streamlit as st
from PIL import Image

sidebar_name = "üéØ R√©sultats"

# Creation des variables pour les images qu'on va charger plus tard
resume_sans = Image.open(r"images\4_classes.png")
resume_masques = Image.open(r"images\4_classes_masques.png")
conf_enet = Image.open(r"images\4_enet_conf.png")
courbe_enet = Image.open(r"images\4_enet_courbe.png")
conf_vgg = Image.open(r"images\4_vgg_conf.png")
courbe_vgg = Image.open(r"images\4_vgg_courbe.png")
correct = Image.open(r"images\gradcam_correct.png")
incorrect = Image.open(r"images\gradcam_incorrect.png")


def run():
    st.markdown("<h2 style='text-align: center; color: black;'>R√©sultats </h2>", unsafe_allow_html=True)
    st.write("---")

    st.markdown("<h4 style='text-align: center; color: black;'>R√©sum√© des r√©sultats </h4>", unsafe_allow_html=True, )

    # Tableau pour resumer les r√©sultats
    selected_option = st.selectbox("S√©lectionner une option", ["R√©sultats sans masques", "R√©sultats avec masques"])

    if selected_option == "R√©sultats sans masques":
        st.subheader("R√©sum√© des r√©sultats sur 4 classes sans masques")
        st.image(resume_sans)
        st.write("Les mod√®les bas√©s sur EfficientNetB1 et VGG16 se sont r√©v√©l√©s remarquablement efficaces tant en "
                 "termes de pr√©cision globale que de sensibilit√© aux faux n√©gatifs.")
    elif selected_option == "R√©sultats avec masques":
        st.subheader("R√©sum√© des r√©sultats sur 4 classes avec masques")
        st.image(resume_masques)
        st.write("Comme pour l‚Äô√©tude √† deux classes, l‚Äôapplication de masques entra√Æne une r√©duction des mesures de "
                 "performances, mais l‚Äôarchitecture bas√©e sur EfficientNetB1 conserve n√©anmoins des scores assez "
                 "√©lev√©s.")

    st.write("---")

    # Contexte
    st.markdown("<h5 style='text-align: center; color: black;'>Optimisation des hyperparam√®tres </h5>",
                unsafe_allow_html=True, )
    st.write(" ")
    st.markdown("-   Pour affiner davantage la performance de nos mod√®le choisi, EfficientNetB1 et VGG16, nous avons "
                "employ√© Keras Tuner pour l'optimisation des hyperparam√®tres. Cette d√©marche a √©t√© guid√©e par un code "
                "de recherche al√©atoire (`RandomSearch`), ciblant sp√©cifiquement la minimisation de la perte de "
                "validation (`val_loss`) sur un total de 50 essais (`max_trials`).")
    st.markdown("- Outre la s√©lection des meilleurs hyperparam√®tres, cette √©tape nous a permis de tester l'efficacit√© "
                "de la cong√©lation et de la d√©cong√©lation des couches dans les mod√®les de base.")
    st.markdown("- Les mod√®les les plus performants utilis√©s pour l'√©tude finale √©taient celui bas√© sur "
                "l'architecture EfficientNet avec 31 couches du mod√®le de base d√©gel√©es, et celui bas√© sur "
                "l'architecture VGG16 avec 4 couches d√©gel√©es.")
    st.write(" ")

    st.markdown("<h5 style='text-align: center; color: black;'>Etude avec masques vs. sans masques </h5>",
                unsafe_allow_html=True, )
    st.write(" ")
    st.markdown(
        "-   Nos r√©sultats indiquent une performance g√©n√©ralement inf√©rieure des mod√®les lorsque des masques "
        "num√©riques sont appliqu√©s pour cibler la r√©gion pulmonaire.")
    st.markdown(
        "- Une raison possible pourrait √™tre la perte d'information contextuelle qui pourrait aider le mod√®le √† "
        "diff√©rencier entre les diverses classes.")

    st.markdown("<h5 style='text-align: center; color: black;'>Faux positifs et faux n√©gatifs </h5>",
                unsafe_allow_html=True, )
    st.write(" ")
    st.markdown("-   Dans le contexte clinique, la pr√©cision du diagnostic est cruciale. Un faux positif, "
                "c'est-√†-dire la classification erron√©e d'un patient sain comme √©tant malade, peut conduire √† des "
                "traitements inutiles et induire un stress psychologique consid√©rable pour le patient.")
    st.markdown("-   Dans notre √©tude, tous les mod√®les ont montr√© une faible proportion de faux positifs et de faux "
                "n√©gatifs, mais il est crucial de prendre ces erreurs en compte.")
    st.markdown("- Dans l‚Äô√©tude binaire ¬´ Sain vs Malade ¬ª, le mod√®le VGG16 a affich√© le plus faible taux de faux "
                "n√©gatifs, avec seulement 59 cas mal class√©s parmi les 996 r√©ellement malades. Ce r√©sultat pourrait "
                "faire de VGG16 un choix pr√©f√©rable dans un contexte clinique o√π minimiser les faux n√©gatifs est une "
                "priorit√©. Cependant, il est important de consid√©rer √©galement d'autres m√©triques de performance et "
                "les sp√©cificit√©s de l'application clinique en question.")
    st.write(" ")

    st.markdown("<h5 style='text-align: center; color: black;'>Tnterpr√©tabilit√© du mod√®le </h5>",
                unsafe_allow_html=True, )
    st.write(" ")
    st.markdown("-   Afin d'offrir une meilleure compr√©hension des d√©cisions prises par notre mod√®le EfficientNetB1, "
                "nous avons fait appel √† la technique Grad-CAM (Gradient-weighted Class Activation Mapping).")
    st.markdown("-   Dans le cadre de notre √©tude, l'impl√©mentation de Grad-CAM a r√©v√©l√© une focalisation coh√©rente "
                "et m√©dicalement pertinente des zones d'int√©r√™t, renfor√ßant ainsi la cr√©dibilit√© de nos r√©sultats.")
    st.write(" ")

    st.write("---")
    st.markdown("<h4 style='text-align: center; color: black;'>R√©sultats de l'√©tude de 4 classes sans masques</h4>",
                unsafe_allow_html=True, )

    # Matrices de confusion et courbes d'entrainement
    col1, col2 = st.columns(2)

    with col1:
        st.subheader("VGG16")
        st.image(conf_vgg, use_column_width=True)
        st.write("---")
        st.image(courbe_vgg, caption="Courbe d'entrainement", use_column_width=True)

    with col2:
        st.subheader("EfficientNetB1")
        st.image(conf_enet, use_column_width=True)
        st.write(" ")
        st.image(courbe_enet, use_column_width=True)


    # GradCAM
    st.write("---")
    st.markdown("<h4 style='text-align: center; color: black;'>R√©sultats du GradCAM sur EfficientNetB1, 4 classes "
                "sans masques </h4>", unsafe_allow_html=True, )
    st.write("  ")
    st.write("GradCAM de pr√©dictions correctes")
    st.image(correct)
    st.write("  ")
    st.write("  ")
    st.write("GradCAM de pr√©dictions incorrectes")
    st.image(incorrect)
